"""
Django settings for upbank project.

Generated by 'django-admin startproject' using Django 4.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from datetime import timedelta
from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'django-insecure-b!_%tm=&!b3fw=_tz=h%f36qfr%4i+4uaq!x)6pgy5e4k4qd4#')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DJANGO_DEBUG', 'True') == 'True'

ALLOWED_HOSTS = []
if DEBUG:
	ALLOWED_HOSTS = ['*']
HOST = os.environ.get('DJANGO_HOST')
PUBLIC_HOST = os.environ.get('DJANGO_PUBLIC_HOST')
if HOST:
	ALLOWED_HOSTS.append(HOST)
if PUBLIC_HOST:
	ALLOWED_HOSTS.append(PUBLIC_HOST)

# Application definition

INSTALLED_APPS = [
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.sessions',

	# Local apps
	'banking',

	# Outside apps
	'rest_framework',
	'knox',
	'corsheaders',
]

MIDDLEWARE = [
	'django.middleware.security.SecurityMiddleware',
	'django.contrib.sessions.middleware.SessionMiddleware',
	'corsheaders.middleware.CorsMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

if DEBUG:
	INSTALLED_APPS.append('django.contrib.admin')
	INSTALLED_APPS.append('django.contrib.messages')
	INSTALLED_APPS.append('django.contrib.staticfiles')
	MIDDLEWARE.append('django.middleware.csrf.CsrfViewMiddleware')
	MIDDLEWARE.append('django.contrib.messages.middleware.MessageMiddleware')

ROOT_URLCONF = 'upbank.urls'

TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [],
		'APP_DIRS': True,
		'OPTIONS': {
			'context_processors': [
				'django.template.context_processors.debug',
				'django.template.context_processors.request',
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
			],
		},
	},
]

WSGI_APPLICATION = 'upbank.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
	'default': {
		'ENGINE': 'django.db.backends.sqlite3',
		'NAME': BASE_DIR / 'db.sqlite3',
	}
}

engine = os.environ.get('DJANGO_DB_ENGINE')

if engine:
	name = os.environ.get('DJANGO_DB_NAME')
	user = os.environ.get('DJANGO_DB_USER')
	password = os.environ.get('DJANGO_DB_PASSWORD')
	host = os.environ.get('DJANGO_DB_HOST')
	port = os.environ.get('DJANGO_DB_PORT')
	DATABASES['default'] = {
		'ENGINE': engine,
		'NAME': name,
		'USER' : user,
		'PASSWORD' : password,
		'HOST' : host,
		'PORT' : port
	}
	
if DEBUG:
	import sys
	if sys.argv[1:2] == ['test']:
		DATABASES['default'] = {
			'ENGINE': 'django.db.backends.sqlite3',
			'NAME': ':memory:',
		}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
	{
		'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
		'OPTIONS': {
			'min_length': 8,
		}
	}, 
]

PASSWORD_HASHERS = [
	'django.contrib.auth.hashers.Argon2PasswordHasher',
	'django.contrib.auth.hashers.PBKDF2PasswordHasher',
	'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
	'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# ADD CORS HERE
CORS_ORIGIN_WHITELIST = ['https://upbank.pt', 'https://www.upbank.pt']

CORS_ALLOW_CREDENTIALS = True
if DEBUG:
	CORS_ORIGIN_ALLOW_ALL = True
	
SECURE_SSL_REDIRECT = not DEBUG
CSRF_COOKIE_SECURE = not DEBUG
SESSION_COOKIE_SECURE = not DEBUG
SECURE_HSTS_SECONDS = 3600 if DEBUG else 31536000
SECURE_HSTS_INCLUDE_SUBDOMAINS = True

REST_KNOX = {
	'TOKEN_TTL': timedelta(hours=1),
	'AUTO_REFRESH' : True,
}

REST_FRAMEWORK = {
	'DEFAULT_AUTHENTICATION_CLASSES': ('knox.auth.TokenAuthentication',),
	'DEFAULT_PERMISSION_CLASSES': ('rest_framework.permissions.IsAuthenticated',),
	'DEFAULT_RENDERER_CLASSES': (
		'djangorestframework_camel_case.render.CamelCaseJSONRenderer',
		'djangorestframework_camel_case.render.CamelCaseBrowsableAPIRenderer'
	),

	'DEFAULT_PARSER_CLASSES': (
		'djangorestframework_camel_case.parser.CamelCaseFormParser',
		'djangorestframework_camel_case.parser.CamelCaseMultiPartParser',
		'djangorestframework_camel_case.parser.CamelCaseJSONParser'
	),
}

DEFAULT_BALANCE = 10000
MAX_PIN = 9999
MAX_CVV = 999